# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License. 

# Pull request against these branches will trigger this build
pr:
- master
- staging

# Any commit to these branches will trigger the build.
trigger:
- staging
- master


jobs:
- job: cpu_integration_tests_linux
  timeoutInMinutes: 60 # how long to run the job before automatically cancelling
  pool:
    # vmImage: 'ubuntu-16.04' # hosted machine 
    name: $(Agent_Name)

  steps:
  - bash: |
      echo "##vso[task.prependpath]/data/anaconda/bin"
      export PATH="/data/anaconda/bin:$PATH"
      conda env list
    displayName: Add conda to PATH

  - bash: |
      echo "Initializing setup ..."
      pwd
      ls
      uname -ra
      echo "Running cleanup ... "
      conda env remove -n forecasting_env
      echo "Cleanup done."
    displayName: 'Cleanup existing conda environment'

  - bash: |
      echo "Running conda env setup ..."
      yes | conda env create -n forecasting_env -f tools/environment.yml
      eval "$(conda shell.bash hook)" && conda activate forecasting_env
      pip install -e fclib
      pip install ray>=0.8.2
      echo "Conda env installed."
    displayName: 'Creating conda environment with dependencies'

  - bash: |
      sudo ln -sf /usr/lib/R/modules/lapack.so /usr/lib/libRlapack.so
      eval "$(conda shell.bash hook)" && conda activate forecasting_env
      python -m ipykernel install --user --name forecasting_env
      pytest --durations=0 tests/integration -m "not gpu and not azureml" --junitxml=report/test-integration.xml
    displayName: 'Run integration tests'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-integration.xml'
      testRunTitle: 'Test results for PyTest'


